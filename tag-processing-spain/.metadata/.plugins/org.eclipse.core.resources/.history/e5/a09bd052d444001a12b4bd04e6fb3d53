package com.vasantlab.file.process;

import java.util.List;

import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.CreationHelper;
import org.apache.poi.ss.usermodel.Font;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import com.vasanthlab.dao.data.service.interfaces.RFIDDataService;
import com.vasanthlab.dao.data.service.interfaces.TagDataFeedService;
import com.vasantlab.data.tables.RFIDData;
import com.vasantlab.data.tables.TagDataFeed;
import com.vasantlab.file.processinterface.RFIDReportProcessFile;
@Component("rfidReportProcessFile")
public class RFIDReportProcessFileImpl implements RFIDReportProcessFile{
	
	private static Logger log = LoggerFactory.getLogger(RFIDReportProcessFileImpl.class);
	
	@Autowired
	private TagDataFeedService tagDataFeedService;
	@Autowired
	private RFIDDataService rfidDataService;
	
	private static String[] columns = {"BarCode", "Epc", "RSSI", "ReadCount","States","AccessPassword","KillPassWord","TID","UserMemory","Tag Creation Date","EPCLockInfo","KillPwLockInfo","AccessPwLockInfo","UserMemoryLockInfo"};
	@Override
	public void getReportFileCreation(String orderId, String barCode) {
		TagDataFeed tagData = tagDataFeedService.findTagData(orderId, barCode);
		List<RFIDData> tagRfidData = rfidDataService.finddata(orderId, barCode);
		// Create a Workbook
        Workbook workbook = new XSSFWorkbook();
        CreationHelper createHelper = workbook.getCreationHelper();

        // Create a Sheet
        Sheet sheet = workbook.createSheet(orderId);
        
        // Create a Font for styling header cells
        Font headerFont = workbook.createFont();
        headerFont.setFontHeightInPoints((short) 14);
        headerFont.setColor(IndexedColors.BLUE.getIndex());
        
     // Create a CellStyle with the font
        CellStyle headerCellStyle = workbook.createCellStyle();
        headerCellStyle.setFont(headerFont);

        // Create a Row
        Row headerRow = sheet.createRow(0);
        // Create cells
        for(int i = 0; i < columns.length; i++) {
            Cell cell = headerRow.createCell(i);
            cell.setCellValue(columns[i]);
            cell.setCellStyle(headerCellStyle);
        }
	}

}
