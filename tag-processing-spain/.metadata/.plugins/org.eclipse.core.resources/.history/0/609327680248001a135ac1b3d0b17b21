package com.vasantlab.util;

public class CommPortCommandUtil {
	public final static byte[] STARTOKCOMMAND = new byte[] { (byte) 0xAA, (byte) 0xAA, (byte) 0x24, (byte) 0x02,
			(byte) 0x31, (byte) 0x30, (byte) 0x30 };

	public final static byte[] WRITEOKCOMMAND = new byte[] { (byte) 0xAA, (byte) 0xAA, (byte) 0x24, (byte) 0x02,
			(byte) 0x03, (byte) 0x30, (byte) 0x30 };

	public final static byte[] READOKCOMMAND = new byte[] { (byte) 0xAA, (byte) 0xAA, (byte) 0x24, (byte) 0x02,
			(byte) 0x05, (byte) 0x30, (byte) 0x30 };

	public final static byte[] READEFAILCOMMAND = new byte[] { (byte) 0xAA, (byte) 0xAA, (byte) 0x24, (byte) 0x02,
			(byte) 0x06, (byte) 0x30, (byte) 0x30 };

	public final static byte[] ERRORCODECOMMAND = new byte[] { (byte) 0xAA, (byte) 0xAA, (byte) 0x24, (byte) 0x03,
			(byte) 0x90, (byte) 0x00, (byte) 0x30, (byte) 0x30 };

	public final static String WRITEREPEAT = "AAAA2402023030";
	
	public final static byte[] READ_PT1("AAAA2402813030");
	public final static byte[] READ_PT2("AAAA2402823030");
	public final static byte[] READ_PT3("AAAA2402833030");
	public final static byte[] READ_PT4("AAAA2402843030");
	public final static byte[] READ_PT5("AAAA2402853030");
	public final static byte[] READ_PT6 ("AAAA2402863030");
	public final static byte[] READ_PT7("AAAA2402873030");
	public final static byte[] READ_M11 ("AAAA2402883030");
	public final static byte[] READ_M21("AAAA2402893030");
	public final static byte[] READ_M31("AAAA24028A3030");
	public final static byte[] READ_M12("AAAA24028B3030");
	public final static byte[] READ_M22("AAAA24028C3030");
	public final static byte[] READ_M32("AAAA24028D3030");
	public final static byte[] READ_M13("AAAA2402B03030");
	public final static byte[] READ_M23(" AAAA2402B13030");
	public final static byte[] READ_M33 (" AAAA2402B23030");
	public final static byte[] READ_M14 ("AAAA2402B33030");
	public final static byte[] READ_M24("AAAA2402B43030");
	public final static byte[] READ_M34(" AAAA2402B53030");
	public final static byte[] READ_DP1 ("AAAA2402B63030");
	public final static byte[] READ_DP2("AAAA2402B73030");
	public final static byte[] READ_DP3 ("AAAA2402B83030");
	
	
	final static String ERRORSTARTCOMMAND = "AAAA24023031";
	final static String ERRORREADCOMMAND = "AAAA24020433";
	final static String ERRORWRITECOMMAND = "AAAA24020232";

	public static boolean getCommand(String errorCode, String recevieData) {
		boolean result = false;
		switch (errorCode) {
		case "0033":
			if (recevieData.equalsIgnoreCase(ERRORSTARTCOMMAND)) {
				CachingUtil.cachingErrorCode.clear();
				result = true;
			}
			break;
		case "0133":
			if (recevieData.equalsIgnoreCase(ERRORSTARTCOMMAND)) {
				CachingUtil.cachingErrorCode.clear();
				result = true;
			}
			break;
		case "0233":
			if (recevieData.equalsIgnoreCase(ERRORSTARTCOMMAND)) {
				CachingUtil.cachingErrorCode.clear();
				result = true;
			}
			break;
		case "0333":
			if (recevieData.equalsIgnoreCase(ERRORREADCOMMAND)) {
				CachingUtil.cachingErrorCode.clear();
				result = true;
			}
			break;
		case "0433":
			if (recevieData.equalsIgnoreCase(ERRORREADCOMMAND)) {
				CachingUtil.cachingError04Command.set("04ErrorCommand", ERRORREADCOMMAND);
				result = true;
			} else if (recevieData.equalsIgnoreCase(ERRORSTARTCOMMAND)
					&& CachingUtil.cachingError04Command.get("04ErrorCommand").equalsIgnoreCase(ERRORREADCOMMAND)) {
				CachingUtil.cachingErrorCode.clear();
				CachingUtil.cachingError04Command.clear();
				result = true;
			}
			break;
		case "0533":
			if (recevieData.equalsIgnoreCase(ERRORSTARTCOMMAND)) {
				CachingUtil.cachingErrorCode.clear();
				result = true;
			}
			break;
		case "F533":
			if (recevieData.equalsIgnoreCase(ERRORREADCOMMAND)) {
				CachingUtil.cachingErrorCode.clear();
				result = true;
			}
			break;
		case "020A":
			if (recevieData.equalsIgnoreCase(ERRORSTARTCOMMAND)) {
				CachingUtil.cachingErrorCode.clear();
				result = true;
			}
			break;
		case "030A":
			if (recevieData.equalsIgnoreCase(ERRORSTARTCOMMAND)) {
				CachingUtil.cachingErrorCode.clear();
				result = true;
			}
			break;
		case "0202":
			if (recevieData.equalsIgnoreCase(ERRORWRITECOMMAND)) {
				CachingUtil.cachingErrorCode.clear();
				result = true;
			}
			break;
		default:
			System.out.println("no match");
		}
		return result;
	}

}
